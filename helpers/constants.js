"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.URLS_TO_MONITOR = exports.MONGO_DB_URI = exports.API_GATEWAY_POLICY = exports.S3_POLICY = exports.CLOUD_WATCH_POLICY = exports.CLOUD_WATCH_DIMENSION_AVAILABILITY = exports.CLOUD_WATCH_DIMENSION_LATENCY = exports.CLOUD_WATCH_NAMESPACE = exports.DYNAMO_DB_POLICY = exports.DYNAMO_DB_SORT = exports.DYNAMO_DB_KEY = void 0;
exports.DYNAMO_DB_KEY = "MessageID"; // Primary Key for DynamoDB Table
exports.DYNAMO_DB_SORT = "TimeStamp"; // Secondary Key for DynamoDB Table
exports.DYNAMO_DB_POLICY = "AmazonDynamoDBFullAccess"; // Managed Policy for AWS DynamoDB
exports.CLOUD_WATCH_NAMESPACE = "Voyager_Farhan"; // Namespace for the metrics we will create for cloudwatch
exports.CLOUD_WATCH_DIMENSION_LATENCY = "Latency"; // Metric name for latency metric
exports.CLOUD_WATCH_DIMENSION_AVAILABILITY = "Availability"; // Metric name for availability metric
exports.CLOUD_WATCH_POLICY = "CloudWatchFullAccess"; // Managed Policy for AWS CloudWatch
exports.S3_POLICY = "AmazonS3FullAccess"; // Managed Policy for AWS S3
exports.API_GATEWAY_POLICY = "AmazonAPIGatewayInvokeFullAccess"; // Managed Policy for AWS API Gateway
exports.MONGO_DB_URI = "mongodb+srv://farhan:skipq2742@cluster0.xxsie.mongodb.net/webHealth?retryWrites=true&w=majority";
exports.URLS_TO_MONITOR = [
    'http://www.skipq.org',
    'http://www.google.com',
    'http://www.ign.com',
    'http://www.facebook.com',
    'http://www.aliexpress.com'
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFhLFFBQUEsYUFBYSxHQUFDLFdBQVcsQ0FBQSxDQUFrRCxpQ0FBaUM7QUFDNUcsUUFBQSxjQUFjLEdBQUMsV0FBVyxDQUFBLENBQWlELG1DQUFtQztBQUM5RyxRQUFBLGdCQUFnQixHQUFHLDBCQUEwQixDQUFBLENBQThCLGtDQUFrQztBQUM3RyxRQUFBLHFCQUFxQixHQUFHLGdCQUFnQixDQUFBLENBQW1DLDBEQUEwRDtBQUNySSxRQUFBLDZCQUE2QixHQUFHLFNBQVMsQ0FBQSxDQUFrQyxpQ0FBaUM7QUFDNUcsUUFBQSxrQ0FBa0MsR0FBRyxjQUFjLENBQUEsQ0FBd0Isc0NBQXNDO0FBQ2pILFFBQUEsa0JBQWtCLEdBQUcsc0JBQXNCLENBQUEsQ0FBZ0Msb0NBQW9DO0FBQy9HLFFBQUEsU0FBUyxHQUFHLG9CQUFvQixDQUFBLENBQTJDLDRCQUE0QjtBQUN2RyxRQUFBLGtCQUFrQixHQUFHLGtDQUFrQyxDQUFBLENBQW9CLHFDQUFxQztBQUNoSCxRQUFBLFlBQVksR0FDekIsaUdBQWlHLENBQUM7QUFDckYsUUFBQSxlQUFlLEdBQUc7SUFDM0Isc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2QixvQkFBb0I7SUFDcEIseUJBQXlCO0lBQ3pCLDJCQUEyQjtDQUM5QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IERZTkFNT19EQl9LRVk9XCJNZXNzYWdlSURcIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUHJpbWFyeSBLZXkgZm9yIER5bmFtb0RCIFRhYmxlXG5leHBvcnQgY29uc3QgRFlOQU1PX0RCX1NPUlQ9XCJUaW1lU3RhbXBcIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZWNvbmRhcnkgS2V5IGZvciBEeW5hbW9EQiBUYWJsZVxuZXhwb3J0IGNvbnN0IERZTkFNT19EQl9QT0xJQ1kgPSBcIkFtYXpvbkR5bmFtb0RCRnVsbEFjY2Vzc1wiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTWFuYWdlZCBQb2xpY3kgZm9yIEFXUyBEeW5hbW9EQlxuZXhwb3J0IGNvbnN0IENMT1VEX1dBVENIX05BTUVTUEFDRSA9IFwiVm95YWdlcl9GYXJoYW5cIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTmFtZXNwYWNlIGZvciB0aGUgbWV0cmljcyB3ZSB3aWxsIGNyZWF0ZSBmb3IgY2xvdWR3YXRjaFxuZXhwb3J0IGNvbnN0IENMT1VEX1dBVENIX0RJTUVOU0lPTl9MQVRFTkNZID0gXCJMYXRlbmN5XCIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTWV0cmljIG5hbWUgZm9yIGxhdGVuY3kgbWV0cmljXG5leHBvcnQgY29uc3QgQ0xPVURfV0FUQ0hfRElNRU5TSU9OX0FWQUlMQUJJTElUWSA9IFwiQXZhaWxhYmlsaXR5XCIgICAgICAgICAgICAgICAgICAgICAgICAvLyBNZXRyaWMgbmFtZSBmb3IgYXZhaWxhYmlsaXR5IG1ldHJpY1xuZXhwb3J0IGNvbnN0IENMT1VEX1dBVENIX1BPTElDWSA9IFwiQ2xvdWRXYXRjaEZ1bGxBY2Nlc3NcIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTWFuYWdlZCBQb2xpY3kgZm9yIEFXUyBDbG91ZFdhdGNoXG5leHBvcnQgY29uc3QgUzNfUE9MSUNZID0gXCJBbWF6b25TM0Z1bGxBY2Nlc3NcIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBNYW5hZ2VkIFBvbGljeSBmb3IgQVdTIFMzXG5leHBvcnQgY29uc3QgQVBJX0dBVEVXQVlfUE9MSUNZID0gXCJBbWF6b25BUElHYXRld2F5SW52b2tlRnVsbEFjY2Vzc1wiICAgICAgICAgICAgICAgICAgICAvLyBNYW5hZ2VkIFBvbGljeSBmb3IgQVdTIEFQSSBHYXRld2F5XG5leHBvcnQgY29uc3QgTU9OR09fREJfVVJJID0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTW9uZ29EQiBVUklcblwibW9uZ29kYitzcnY6Ly9mYXJoYW46c2tpcHEyNzQyQGNsdXN0ZXIwLnh4c2llLm1vbmdvZGIubmV0L3dlYkhlYWx0aD9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHlcIjtcbmV4cG9ydCBjb25zdCBVUkxTX1RPX01PTklUT1IgPSBbICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBVUkwgVGhhdCB3ZSB3aWxsIG1vbml0b3JcbiAgICAnaHR0cDovL3d3dy5za2lwcS5vcmcnLFxuICAgICdodHRwOi8vd3d3Lmdvb2dsZS5jb20nLFxuICAgICdodHRwOi8vd3d3Lmlnbi5jb20nLFxuICAgICdodHRwOi8vd3d3LmZhY2Vib29rLmNvbScsXG4gICAgJ2h0dHA6Ly93d3cuYWxpZXhwcmVzcy5jb20nXG5dIl19